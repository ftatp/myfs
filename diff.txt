diff --git a/fusexmp.c b/fusexmp.c
index 72a06c7..b900a5d 100644
--- a/fusexmp.c
+++ b/fusexmp.c
@@ -1,14 +1,3 @@
-/*
-  FUSE: Filesystem in Userspace
-  Copyright (C) 2001-2007  Miklos Szeredi <miklos@szeredi.hu>
-  Copyright (C) 2011       Sebastian Pipping <sebastian@pipping.org>
-
-  This program can be distributed under the terms of the GNU GPL.
-  See the file COPYING.
-
-  gcc -Wall fusexmp.c `pkg-config fuse --cflags --libs` -o fusexmp
-*/
-
 #define FUSE_USE_VERSION 26
 
 #ifdef HAVE_CONFIG_H
@@ -55,15 +44,17 @@ static struct {
 
 static int xmp_getattr(const char *path, struct stat *stbuf)
 {
-  char fullpath[PATH_MAX];
+  char fullpaths[2][PATH_MAX];
 	int res;
 
-  sprintf(fullpath, "%s%s",
-      rand() % 2 == 0 ? global_context.driveA : global_context.driveB, path);
-
-	res = lstat(fullpath, stbuf);
+  sprintf(fullpaths[0], "%s%s", global_context.driveA, path);
+  sprintf(fullpaths[1], "%s%s", global_context.driveB, path);
+  struct stat tmp;
+	res = lstat(fullpaths[0], stbuf);
 	if (res == -1)
 		return -errno;
+  res = lstat(fullpaths[1], &tmp);
+  stbuf->st_size += tmp.st_size;
 
 	return 0;
 }
@@ -369,24 +360,28 @@ static int xmp_open(const char *path, struct fuse_file_info *fi)
 
 static int xmp_read(const char *path, char *buf, size_t size, off_t offset,
     struct fuse_file_info *fi)
-{
-  char fullpath[PATH_MAX];
+{ 
+  char fullpaths[2][PATH_MAX];
   int fd;
-  int res;
-
-  sprintf(fullpath, "%s%s",
-      rand() % 2 == 0 ? global_context.driveA : global_context.driveB, path);
+  int res = 0;
+  int block=512;
+  int diff=1;
+  int div=(((int)offset)/block);
   (void) fi;
-  fd = open(fullpath, O_RDONLY);
-  if (fd == -1)
-    return -errno;
-
-  res = pread(fd, buf, size, offset);
-  if (res == -1)
-    res = -errno;
-
-  close(fd);
-  return res;
+  sprintf(fullpaths[0], "%s%s", global_context.driveA, path);
+  sprintf(fullpaths[1], "%s%s", global_context.driveB, path);
+  for(res = 0;res<size && diff; div++){
+    fd = open(fullpaths[div&1], O_RDONLY);
+    if (fd == -1)
+      return -errno;
+    diff = pread(fd, buf+res, block, div/2*block);
+    res += diff;
+    if (res == -1)
+      res = -errno;
+    close(fd);
+  //  fprintf(stdout,"%d : offset : %d, size : %d, div : %d\nres : %d\n%s\n",div&1,(int)offset,(int)size,div,res,buf);
+  }
+    return res;
 }
 
 static int xmp_write(const char *path, const char *buf, size_t size,
@@ -394,28 +389,24 @@ static int xmp_write(const char *path, const char *buf, size_t size,
 {
   char fullpaths[2][PATH_MAX];
   int fd;
-  int res;
-
+  int res = 0;
+  int block=512;
+  int div=(((int)offset)/block);
+  int remain=block-(offset-div*block);
+  int count=remain<size ? remain : size;
+// fprintf(stdout,"%d : offset : %d, size : %d, counte : %d\n%s\n",div&1,(int)offset,(int)size,count,buf);
   (void) fi;
-
   sprintf(fullpaths[0], "%s%s", global_context.driveA, path);
   sprintf(fullpaths[1], "%s%s", global_context.driveB, path);
-
-  for (int i = 0; i < 2; ++i) {
-    const char* fullpath = fullpaths[i];
-
-    fd = open(fullpath, O_WRONLY);
+    fd = open(fullpaths[div&1], O_WRONLY);
     if (fd == -1)
       return -errno;
-
-    res = pwrite(fd, buf, size, offset);
+    res = pwrite(fd, buf, count, div/2*block+block-remain);
     if (res == -1)
       res = -errno;
-
     close(fd);
-  }
 
-  return res;
+ return res;
 }
 
 static int xmp_statfs(const char *path, struct statvfs *stbuf)
@@ -508,27 +499,33 @@ static int xmp_setxattr(const char *path, const char *name, const char *value,
 static int xmp_getxattr(const char *path, const char *name, char *value,
     size_t size)
 {
-  char fullpath[PATH_MAX];
+  char fullpaths[2][PATH_MAX];
 
-  sprintf(fullpath, "%s%s",
-      rand() % 2 == 0 ? global_context.driveA : global_context.driveB, path);
+  sprintf(fullpaths[0], "%s%s", global_context.driveA, path);
+  sprintf(fullpaths[1], "%s%s", global_context.driveB, path);
 
-  int res = lgetxattr(fullpath, name, value, size);
+  int res = lgetxattr(fullpaths[0], name, value, size);
   if (res == -1)
     return -errno;
+//  size_t siz;
+//  lgtxattr(fullpaths[1],name,value,&siz);
+//  *size+=siz;
   return res;
 }
 
 static int xmp_listxattr(const char *path, char *list, size_t size)
 {
-  char fullpath[PATH_MAX];
+  char fullpaths[2][PATH_MAX];
 
-  sprintf(fullpath, "%s%s",
-      rand() % 2 == 0 ? global_context.driveA : global_context.driveB, path);
+  sprintf(fullpaths[0], "%s%s", global_context.driveA, path);
+  sprintf(fullpaths[1], "%s%s", global_context.driveB, path);
 
-  int res = llistxattr(fullpath, list, size);
+  int res = llistxattr(fullpaths[0], list, size);
   if (res == -1)
     return -errno;
+//  size_t siz;
+//  llistxattr(fullpaths[1],list,&siz);
+//  *size+=siz;
   return res;
 }
 
@@ -571,6 +568,7 @@ static struct fuse_operations xmp_oper = {
   .open		= xmp_open,
   .read		= xmp_read,
   .write		= xmp_write,
+  //.write_buf = xmp_write_buf,
   .statfs		= xmp_statfs,
   .release	= xmp_release,
   .fsync		= xmp_fsync,
@@ -592,8 +590,8 @@ int main(int argc, char *argv[])
     exit(1);
   }
 
-  strcpy(global_context.driveA, argv[--argc]);
   strcpy(global_context.driveB, argv[--argc]);
+  strcpy(global_context.driveA, argv[--argc]);
 
   srand(time(NULL));
 
